{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/LoadingComponent.js","components/BooksComponent.js","components/SearchComponent.js","components/BookDetailComponent.js","components/ProfileComponent.js","components/AddBookComponent.js","components/HistoryComponent.js","components/IssueComponent.js","components/ReturnComponent.js","components/UserDetailComponent.js","components/StatsComponent.js","components/LogComponent.js","components/UserListComponent.js","redux/ActionTypes.js","baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/books.js","redux/auth.js","redux/issues.js","redux/users.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["required","val","length","maxLength","len","minLength","validEmail","test","Registerer","props","isSignedIn","Fragment","Button","color","outline","onClick","toggleRegister","className","Header","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","username","toggleModal","bind","toggleNav","handleLogin","handleLogout","toggle","this","setState","window","innerWidth","event","loginUser","password","value","preventDefault","logoutUser","Navbar","dark","expand","fixed","NavbarToggler","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","auth","userinfo","admin","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","tag","Link","divider","isAuthenticated","user","isLoading","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","disabled","model","values","registerUser","email","roll","firstname","lastname","address","text","placeholder","validators","show","messages","Component","Footer","align","Home","scrollTo","colspan","Loading","RenderBook","book","changeSelected","isAdmin","toggleDeleteModal","toggleEditModal","i","_id","isbn","author","copies","Booklist","list","books","map","booksLoading","booksErrMess","Table","striped","bordered","hover","responsive","Search","cat","onChange","e","options","pos","target","checked","push","splice","colors","nameRegex","RegExp","authorRegex","category_matched","some","category","search","ListGroupItem","Badge","pill","floor","shelf","Row","form","Col","md","for","sm","check","xs","defaultChecked","ListGroup","navigate","useHistory","Card","CardHeader","CardBody","CardTitle","CardText","description","style","marginLeft","CardFooter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","parse","createdAt","updatedAt","BookDetail","errMess","Profile","isEditModalOpen","isPasswordModalOpen","togglePasswordModal","original","editUser","defaultValue","newpassword","confirm","editPassword","alert","matchcreds","requiredNum","maxVal","minVal","isNumber","isNaN","Number","AddBook","postBook","uniqueName","uniqueIsbn","select","textarea","rows","totalFine","RenderIssue","issue","dates","today","issueDate","deadline","setDate","getDate","returnDate","returned","Math","min","apply","fine","getTime","History","issues","Issue","console","log","usersLoading","usersErrMess","bookoptions","index","defaultBook","useroptions","users","filter","defaultUser","bookid","studentid","postIssue","row","onInput","returnBook","student","Return","returnIssue","UserDetail","Stats","CardLink","Log","RenderUser","UserList","BOOKS_LOADING","BOOKS_FAILED","ADD_BOOKS","ADD_BOOK","EDIT_BOOK","DELETE_BOOK","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","EDIT_USER","EDIT_PASSWORD","ISSUES_LOADING","ISSUES_FAILED","ADD_ISSUES","ADD_ISSUE","RETURN_ISSUE","USERS_LOADING","USERS_FAILED","ADD_USERS","baseUrl","dispatch","newBook","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","catch","message","fetchUsers","addUsers","usersFailed","booksFailed","errmess","addBooks","editBookdispatch","editUserdispatch","USER","editPasswordDispatch","CREDS","deleteBookdispatch","resp","creds","requestLogin","success","setItem","token","fetchIssues","setTimeout","receiveLogin","bookId","studentId","newIssue","issueId","issueUrl","issuesLoading","addIssues","issuesFailed","removeItem","Main","isDeleteModalOpen","selectedBook","handleSubmitEdit","fetchBooks","editBook","defaultIsbn","defaultName","PrivateRouteCommon","component","rest","render","pathname","from","location","PrivateRouteAdmin","PrivateRoute","exact","path","match","params","notFoundErr","undefined","selectedUser","userId","deleteBook","withRouter","connect","newUser","newCreds","Books","action","concat","newbook","Auth","Issues","newissue","Users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e1b31ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Navbar,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  NavbarBrand,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Button,\n} from \"reactstrap\";\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nfunction Registerer(props) {\n  if (props.isSignedIn === false) return <React.Fragment></React.Fragment>;\n  else\n    return (\n      <React.Fragment>\n        &nbsp;\n        <Button color=\"primary\" outline onClick={props.toggleRegister}>\n          <span className=\"fa fa-user-plus fa-lg\"></span> Register\n        </Button>\n      </React.Fragment>\n    );\n}\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n      isRegisterOpen: false,\n      dropdownOpen: false,\n    };\n    this.username = \"admin\";\n    this.toggleModal = this.toggleModal.bind(this);\n    this.toggleNav = this.toggleNav.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.toggleRegister = this.toggleRegister.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\n  }\n  toggleNav() {\n    if (window.innerWidth < 1200) {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen,\n      });\n    }\n  }\n\n  toggleRegister(event) {\n    this.setState({\n      isRegisterOpen: !this.state.isRegisterOpen,\n    });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    this.props.loginUser({ username: \"admin\", password: this.password.value });\n    event.preventDefault();\n  }\n\n  handleLogout() {\n    this.props.logoutUser();\n  }\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar color=\"dark\" dark expand=\"xl\" fixed=\"top\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\n            <NavbarBrand className=\"mr-auto text-primary\" href=\"/home\">\n              University Library\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                  <NavLink className=\"nav-link text-primary\" to=\"/home\">\n                    <span className=\"fa fa-home fa-lg\" /> Home\n                  </NavLink>\n                </NavItem>\n                {this.props.auth.userinfo && this.props.auth.userinfo.admin ? (\n                  <NavItem className=\"\">\n                    <Dropdown\n                      isOpen={this.state.dropdownOpen}\n                      toggle={this.toggle}\n                    >\n                      <DropdownToggle color=\"Primary\">\n                        <div className=\"text-primary\">\n                          <span className=\"fa fa-book fa-lg\" /> Books &nbsp;{\" \"}\n                          <i\n                            className=\"fa fa-caret-down fa-sm\"\n                            aria-hidden=\"true\"\n                          ></i>\n                        </div>\n                      </DropdownToggle>\n                      <DropdownMenu>\n                        <DropdownItem\n                          onClick={this.toggleNav}\n                          tag={Link}\n                          to=\"/books\"\n                        >\n                          View / Modify books\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem\n                          onClick={this.toggleNav}\n                          tag={Link}\n                          to=\"/add_book\"\n                        >\n                          Add book\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </Dropdown>\n                  </NavItem>\n                ) : (\n                  <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                    <NavLink className=\"nav-link text-primary\" to=\"/books\">\n                      <span className=\"fa fa-book fa-lg\" /> Books\n                    </NavLink>\n                  </NavItem>\n                )}\n\n                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\n                  <NavLink className=\"nav-link text-primary\" to=\"/search\">\n                    <span className=\"fa fa-search fa-lg\" /> Search\n                  </NavLink>\n                </NavItem>\n                {this.props.auth.isAuthenticated ? (\n                  <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                    {/* <NavLink className=\"nav-link text-primary\" to=\"/profile\">\n                      <span className=\"fa fa-user-circle-o fa-lg\" /> My Profile\n                    </NavLink> */}\n                    <Registerer\n                      isSignedIn={this.props.auth.isAuthenticated}\n                      toggleRegister={() => {\n                        this.toggleRegister();\n                      }}\n                    />\n                  </NavItem>\n                ) : (\n                  <div />\n                )}\n                {this.props.auth.isAuthenticated &&\n                !this.props.auth.userinfo.admin ? (\n                  <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                    <NavLink className=\"nav-link text-primary\" to=\"/history\">\n                      <span className=\"fa fa-history\" /> Issue history\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <div />\n                )}\n                {this.props.auth.isAuthenticated &&\n                this.props.auth.userinfo.admin ? (\n                  <React.Fragment>\n                    {/* <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                      <NavLink className=\"nav-link text-primary\" to=\"/issue\">\n                        <span className=\"fa fa-plus-square\" /> Issue Book\n                      </NavLink>\n                    </NavItem> */}\n                    <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                      <NavLink className=\"nav-link text-primary\" to=\"/return\">\n                        <span className=\"fa fa-list-ul\" /> Return Book\n                      </NavLink>\n                    </NavItem>\n                    <NavItem onClick={this.toggleNav} className=\"ml-2\">\n                      <NavLink className=\"nav-link text-primary\" to=\"/stats\">\n                        <span className=\"fa fa-info-circle\" /> Stats\n                      </NavLink>\n                    </NavItem>\n                  </React.Fragment>\n                ) : (\n                  <div />\n                )}\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  {!this.props.auth.isAuthenticated ? (\n                    <Button outline color=\"primary\" onClick={this.toggleModal}>\n                      <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                      {this.props.auth.isLoading ? (\n                        <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                      ) : null}\n                    </Button>\n                  ) : (\n                    <div>\n                      <div className=\"navbar-text mr-3\">\n                        {this.props.auth.user.username}\n                      </div>\n                      <Button\n                        outline\n                        color=\"primary\"\n                        onClick={this.handleLogout}\n                      >\n                        <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                        {this.props.auth.isLoading ? (\n                          <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                        ) : null}\n                      </Button>\n                    </div>\n                  )}\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        <Modal\n          isOpen={!this.props.auth.isAuthenticated && this.state.isModalOpen}\n          toggle={this.toggleModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>Sign In</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                  value=\"admin\"\n                  disabled\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n        <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\n          <ModalHeader toggle={this.toggleRegister}>Register</ModalHeader>\n          <ModalBody>\n            <LocalForm\n              model=\"user\"\n              onSubmit={(values) => {\n                this.toggleRegister();\n                this.props.registerUser({\n                  email: values.email,\n                  roll: values.roll,\n                  firstname: values.firstname,\n                  lastname: values.lastname,\n                  address: values.address,\n                });\n              }}\n            >\n              <FormGroup>\n                <Label htmlFor=\"firstname\">First Name</Label>\n                <Control.text\n                  model=\".firstname\"\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  className=\"form-control\"\n                  placeholder=\"firstname\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(20),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".firstname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \" Must be greater than 2 characters\",\n                    maxLength: \" Must be 20 characters or less\",\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"lastname\">Last Name</Label>\n                <Control.text\n                  model=\".lastname\"\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  className=\"form-control\"\n                  placeholder=\"lastname\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(20),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".lastname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \" Must be greater than 2 characters\",\n                    maxLength: \" Must be 20 characters or less\",\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"roll\">Roll No.</Label>\n                <Control.text\n                  model=\".roll\"\n                  id=\"roll\"\n                  name=\"roll\"\n                  className=\"form-control\"\n                  placeholder=\"roll\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(12),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".roll\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \" Must be greater than 2 characters\",\n                    maxLength: \" Must be 12 characters or less\",\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"email\">E-mail</Label>\n                <Control.text\n                  model=\".email\"\n                  id=\"email\"\n                  name=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"email\"\n                  validators={{ required, validEmail }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".email\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    validEmail: \" Enter a valid email\",\n                  }}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"username\">Address</Label>\n                <Control.text\n                  model=\".address\"\n                  id=\"address\"\n                  name=\"address\"\n                  className=\"form-control\"\n                  placeholder=\"Address\"\n                  validators={{ required }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".address\"\n                  show=\"touched\"\n                  messages={{ required: \"Required\" }}\n                />\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Sign Up\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React,{Component} from 'react';\n\nclass Footer extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\nrender(){\n    return(\n                    <p className=\"footer\" align=\"center\">© Copyright 2023 </p>\n          );\n}\n\n}\n\nexport default Footer;","import React,{Component} from 'react';\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    return(\n        <div className=\"container mt-4 home text-center align-self-center\">\n        <br/><br/><br/>\n            <div className=\"row mt-3 darkbg text-center justify-content-center\">\n            <h1 align=\"center\"> Welcome to the University Library</h1>\n            </div>\n            <div className=\"row darkbg\">\n\n        <br/><br/><br/>\n        <br/><br/><br/>\n            <h6>\n           \n            <br/><br/> </h6>\n            </div>\n            <div className=\"row darkbg justify-content-center\">\n            <table>\n    <tr> <th colspan=\"2\"><h6>Library Timings</h6></th> </tr>\n    <tr> <td><h6>Opening Time</h6> </td> <td> <h6>9.00 A.M.</h6></td></tr>\n    <tr> <td>Closing Time </td> <td> 9.00 P.M.</td></tr>\n            </table>\n            <br/>\n            <br/>\n                </div>\n                <br/><br/>\n                <br/><br/><br/>\n            </div>\n        );\n}\n\n}\n\nexport default Home;","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"col-12 heading justify-content-center loading\">\n            <br/><br/>\n            <br/><br/>\n            <h1 align=\"center\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <br/><br/>\n            Loading ....</h1>\n        </div>\n    );\n};\n\nexport default Loading;","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\n// RenderBook is a functional component\nfunction RenderBook ({book, changeSelected ,isAdmin, toggleDeleteModal,toggleEditModal,i}) {\n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n            <Link to={`/books/${book._id}`}>\n            {book.name}\n            </Link>\n            </td>\n            <td>\n            {book.isbn}\n            </td>\n            <td>\n                {book.author}\n            </td>\n            <td>\n                {book.copies}\n            </td>\n            {isAdmin?(<td><span onClick={()=>{changeSelected(book._id); toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\n                          &nbsp; &nbsp; <span onClick={()=>{changeSelected(book._id); toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\n                        </td>):(<React.Fragment/>)}\n            </React.Fragment>\n       );\n}\n\n\nclass Booklist extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n        this.i=1;\n    }\n\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n      \nrender(){\n    const list = this.props.books.map((book) => {\n        return (\n                <tr key={book.name}>\n                    <RenderBook book={book} isAdmin={this.props.isAdmin} changeSelected={this.props.changeSelected}\n                    toggleDeleteModal={this.props.toggleDeleteModal}\n                    toggleEditModal={this.props.toggleEditModal}\n                    i={this.i++}\n                    />\n                </tr>\n        );\n    });\n\n    if (this.props.booksLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.booksErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.booksErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n    {\n    return(\n        \n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-12 heading\">\n             <h3 align=\"center\">List of All books</h3>\n             <Table striped bordered hover responsive>\n        <thead>\n          <tr>\n            <th>S.No.</th>\n            <th>Name of Book</th>\n            <th>ISBN number</th>\n            <th>Authors</th>\n            <th>Copies available</th>\n            {this.props.isAdmin?(<th>Edit / <br/>Delete</th>):(<React.Fragment/>)}\n          </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            </div>\n        </div>\n    </div>\n\n        );\n}\n}\n\n}\n\nexport default Booklist;","import React,{Component} from 'react';\nimport { Form,FormGroup,Row,Col,Label, Input, Badge, ListGroupItem, ListGroup } from 'reactstrap';\nimport Loading from './LoadingComponent.js';\nimport {Link} from 'react-router-dom';\n\nclass Search extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            name: '',\n            author: '',\n            cat:['Romance','Technology','Computer Science','Management','Electronics','Physics','Chemistry','Mathematics','Fiction','Philosophy','Language','Arts','Other']\n        }\n        this.onChange=this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        const options = this.state.cat;\n        let pos=-1;\n    \n        if (e.target.checked) {\n            options.push(e.target.value)\n        } else {\n          let i=0;\n          for(; i<options.length; i++){\n              if(options[i]===(e.target.value)) {\n                  pos=i;\n                  break;\n                }\n                else{\n                }\n          }\n          options.splice(pos, 1)\n        }\n        this.setState({ cat: options });\n      }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n      \nrender(){\n    var colors=[\"warning\",\"danger\",\"success\",\"info\",\"secondary\"];\n    var nameRegex=new RegExp(this.state.name, 'i');\n    var authorRegex=new RegExp(this.state.author, 'i');\n    const list = this.props.books.map((book) => {\n        let category_matched=this.state.cat.some((category)=>(category===book.cat));\n        if(((book.name).search(nameRegex)!==-1)&&((book.author).search(authorRegex)!==-1)&&category_matched)\n        return (\n            <ListGroupItem key={book._id}>\n                         <Link to={`/books/${book._id}`}>\n                         <b>{`${book.name}  `}</b> \n                         </Link>\n                          <Badge color={colors[book.cat.length%5]} pill> {book.cat}</Badge>\n             {this.props.isAdmin?(\n             <React.Fragment>&nbsp; &nbsp;<span onClick={()=>{this.props.changeSelected(book._id); this.props.toggleEditModal(); }} className=\"Option fa fa-pencil\"/>\n                {'  '}&nbsp;   &nbsp;        <span onClick={()=>{this.props.changeSelected(book._id); this.props.toggleDeleteModal();}} className=\"Option fa fa-trash\"/>\n                          </React.Fragment>\n             ):(<React.Fragment/>)}\n            \n            <br/> <p className=\"ml-auto\"> Authors : {`    ${book.author}`}</p>\n             <p> {book.copies} Copies available</p>\n             <p>Location : {` Floor- ${book.floor}, Shelf- ${book.shelf}`}</p>\n            </ListGroupItem>        );\n            else return (<React.Fragment/>);\n    });\n    if (this.props.booksLoading) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.booksErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.booksErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n    {\n    return(\n        \n        <div className=\"container loading\">\n        <div className=\"row\">\n            <div className=\"col-12 heading\">\n             <h3 align=\"center\">Search your book here : </h3>\n             <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"name\">Name of book</Label>\n              <Input type=\"name\" name=\"name\" id=\"name\" value={this.state.name} onChange={(e)=>{this.setState({name: e.target.value});}} placeholder=\"Enter name of the book\" />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"author\">Author</Label>\n              <Input type=\"author\" name=\"author\" id=\"author\" value={this.state.author}  onChange={(e)=>{this.setState({author: e.target.value});}} placeholder=\"Enter name of author\" />\n            </FormGroup>\n          </Col>\n        </Row> \n        <Row>\n        <Col sm={6} md={2}>\n            Category : {' '}\n        </Col>\n        </Row>\n        <FormGroup check>\n        <Row>\n        <Col xs={6} md={3}>\n          <Label check for=\"romance\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"romance\" value=\"Romance\" name=\"cat\" />\n            Romance \n          </Label>\n        </Col>\n        <Col xs={6} md={3}>\n          <Label check for=\"fiction\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"fiction\" value=\"Fiction\" name=\"cat\" />\n            Fiction\n          </Label>\n          </Col>\n\n          <Col xs={6} md={3}>\n          <Label check for=\"Arts\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Arts\" value=\"Arts\" name=\"cat\" />\n            Arts\n          </Label>\n          </Col>\n          <Col xs={6} md={3}>\n          <Label check for=\"computer\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"computer\" value=\"Computer Science\" name=\"cat\" />\n            Computer Science\n          </Label>\n          </Col>\n          </Row>\n          <Row>\n        <Col xs={6} md={3}>\n          <Label check for=\"management\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"management\" value=\"Management\" name=\"cat\" />\n            Management \n          </Label>\n        </Col>\n        <Col xs={6} md={3}>\n          <Label check for=\"Physics\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Physics\" value=\"Physics\" name=\"cat\" />\n            Physics\n          </Label>\n          </Col>\n\n          <Col xs={6} md={3}>\n          <Label check for=\"technology\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"technology\" value=\"Technology\"  name=\"cat\" />\n            Technology\n          </Label>\n          </Col>\n          <Col xs={6} md={3}>\n          <Label check for=\"Philosophy\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Philosophy\" value=\"Philosophy\" name=\"cat\" />\n            Philosophy\n          </Label>\n          </Col>\n          </Row>\n          <Row>\n        <Col xs={6} md={3}>\n          <Label check for=\"Mathematics\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Mathematics\" value=\"Mathematics\" name=\"cat\" />\n            Mathematics \n          </Label>\n        </Col>\n        <Col xs={6} md={3}>\n          <Label check for=\"Chemistry\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Chemistry\" value=\"Chemistry\" name=\"cat\" />\n            Chemistry\n          </Label>\n          </Col>\n\n          <Col xs={6} md={3}>\n          <Label check for=\"Electronics\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Electronics\" value=\"Electronics\" name=\"cat\" />\n            Electronics\n          </Label>\n          </Col>\n          <Col xs={6} md={3}>\n          <Label check for=\"Language\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Language\" value=\"Language\" name=\"cat\" />\n            Language\n          </Label>\n          </Col>\n          </Row>\n          <Row>\n          <Col xs={6} md={3}>\n          <Label check for=\"Other\">\n            <Input defaultChecked type=\"checkbox\" onChange={this.onChange} id=\"Other\" value=\"Other\" name=\"cat\" />\n            Other\n          </Label>\n          </Col>\n        </Row>\n        </FormGroup>\n        </Form>\n            </div>\n        </div>\n        <div className=\"row\">\n        <div className=\"col-12\">\n      <br/>\n      <ListGroup>\n      {list}\n      </ListGroup>\n      </div>\n      </div>\n      <br/>\n    </div>\n\n        );\n}\n}\n\n}\n\nexport default Search;","import React,{Component, useEffect} from 'react';\nimport {Row,Col, Card, CardText, CardHeader, CardFooter, CardBody,CardTitle } from 'reactstrap';\nimport Loading from './LoadingComponent';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nfunction RenderBook({book,isAdmin,toggleEditModal,changeSelected}) {\n    const navigate = useHistory();\n  \n    if (book != null)\n        return(\n        <Card>\n       \n       <CardHeader tag=\"h3\">{book.name} &nbsp; &nbsp; &nbsp;&nbsp;\n       {isAdmin?(<span className=\"fa fa-pencil Option\" onClick={()=>{changeSelected(book._id);toggleEditModal();}}/>):(<React.Fragment/>)}\n       {}{}\n  \n        </CardHeader>\n        <CardBody>\n          <CardTitle align=\"right\"> - {book.author}</CardTitle>\n          <CardText>\n              <b> Category: </b> {book.cat} <br/><br/>\n              <b> ISBN number: </b> {book.isbn} <br/><br/>\n              <b>Descrption: </b><br/> {book.description} <br/><br/>\n              <b> Location: </b> <br/>Shelf no. {book.shelf} ,<br/>\n              {book.floor===0?' Ground ':book.floor}{(book.floor===1)?'st ':(book.floor===2)?'nd ':(book.floor===3)?'rd ':(book.floor===0)?'':'th '}\n              Floor <br/><br/>\n             <b> Copies available : </b> {book.copies}<br/><br/>\n             <button style={{marginLeft:\"10px\"}} onClick={()=>{changeSelected(book._id);navigate.push(\"/issue\");}}>Issue Book</button>\n      </CardText><br/>\n        </CardBody>\n        <CardFooter className=\"text-muted\">\n        <Row>\n        <Col md={6}>\n        Created at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit', hour: 'numeric',minute: 'numeric', hour12: true }).format(new Date( Date.parse(book.createdAt)))}    \n        </Col>\n        <Col md={6}>\n        Last updated at : {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit',hour: 'numeric',minute: 'numeric', hour12: true}).format(new Date( Date.parse(book.updatedAt)))} \n        </Col>\n        </Row>\n        <Row>\n        \n        </Row>\n        </CardFooter>\n        </Card>\n        );\n    else\n        return(\n            <div></div>\n        );\n        }\n\n\nclass BookDetail extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n     \n      }\nrender(){\n  if (this.props.isLoading) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">            \n                <Loading />\n            </div>\n        </div>\n    );\n}\nelse if (this.props.errMess) {\n    return(\n        <div className=\"container loading\">\n            <div className=\"row heading\"> \n                <div className=\"col-12\">\n                    <br/><br/><br/><br/>\n                    <h3>{this.props.errMess}</h3>\n                </div>\n            </div>\n        </div>\n    );\n}\nelse\n    return(\n\n        <div className=\"container full\">\n        <div className=\"row heading\">\n          <div className=\"col-12\">\n          <br/>        <br/>\n          <RenderBook book={this.props.book} isAdmin={this.props.isAdmin}\n                    toggleEditModal={this.props.toggleEditModal}\n                    changeSelected={this.props.changeSelected}>\n              </RenderBook>\n\n        <br/>\n          </div>\n        </div>\n      </div>\n        );\n}\n\n}\n\nexport default BookDetail;","import React,{Component} from 'react';\nimport {Card,CardBody,CardHeader,Label,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\nconst matchcreds = (original) => (val) =>  (val===original);\n\nclass Profile extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            isEditModalOpen: false,\n            isPasswordModalOpen: false\n        }\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n    togglePasswordModal(){\n        this.setState({\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\n        });\n    }\n\n    toggleEditModal(){\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n          }\n      \n\nrender(){\n    if(this.props.auth.userinfo===null){\n        return (\n            <div className=\"row heading\">\n                Failed to fetch. Please reload the page\n            </div>\n        )\n    }\n    return(\n\n        <div className=\"container mt-6 home text-center align-self-center\">\n            <div className=\"row text-center justify-content-center\">\n            \n            <Card className=\"heading\">\n                \n        <CardHeader><h3>My Profile</h3></CardHeader>\n        <CardBody>\n          <CardText>\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\n          <h5> {(this.props.auth.userinfo.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.auth.userinfo.roll}</h5>\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\n          </CardText>\n          \n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\n        {' '}\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\n\n        </CardBody>\n          </Card>\n            </div>\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit Profile\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"user\" onSubmit={(values) => {\n                               this.toggleEditModal();\n                               this.props.editUser(this.props.auth.userinfo._id, values.firstname, \n                                values.lastname, values.roll, values.email);     \n                                 }}>\n                            <FormGroup>\n                                <Label htmlFor=\"firstname\">First Name</Label>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.firstname}\n                             placeholder=\"firstname\" \n                             validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"lastname\">Last Name</Label>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.lastname}\n                            placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"roll\">Roll No.</Label>\n                                <Control.text model=\".roll\" id=\"roll\" name=\"roll\" \n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.roll}\n                            placeholder=\"roll\" validators={{required,minLength: minLength(3),maxLength:maxLength(12)}} />\n                            <Errors className=\"text-danger\" model=\".roll\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 12 characters or less'}}/>\n                            </FormGroup>\n                            <FormGroup>    \n                                 <Label htmlFor=\"email\">E-mail</Label>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                 defaultValue={this.props.auth.userinfo.email} \n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\n                            validEmail: ' Enter a valid email'}}/>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                     </ModalBody>\n               \n          </Modal>\n\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\n                     <ModalHeader toggle={this.togglePasswordModal}>\n                         Change Password\n                     </ModalHeader>\n                     <ModalBody>\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\n                         if(values.newpassword===values.confirm){\n                               this.togglePasswordModal();\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \n                                values.newpassword);     \n                               }\n                        else {\n                            alert(\"Your passwords didn't match. Please try again\");\n                        }\n                                 }}>\n                            <FormGroup>\n                            <Label htmlFor=\"password\">Current Password</Label>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\n                            matchcreds: ' Enter the correct password'}}/>\n                            </FormGroup>\n\n                            <FormGroup>\n                            <Label htmlFor=\"newpassword\">New password</Label>\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                            }}  />\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                      }}/>\n                            </FormGroup>\n                            \n                            <FormGroup>\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \n                            className=\"form-control\"\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\n                                 } } />\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\n                       }}/>\n                            </FormGroup>\n                            \n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                     </ModalBody>               \n          </Modal>\n            </div>\n        );\n}\n\n}\n\nexport default Profile;","import React,{Component} from 'react';\nimport {Button, Label, Col, Row} from 'reactstrap';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\nimport Loading from './LoadingComponent';\n\nconst required = (val) => val && val.length;\nconst requiredNum = (val) => !!(val);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxVal = (len) => (val) => !(val) || (val<= len);\nconst minVal = (len) => (val) => (val) && (val>= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nclass AddBook extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n    }\n    \n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    let uniqueIsbn=(val) =>(!this.props.books.some((book)=>(book.isbn===val)))\n    let uniqueName=(val) =>(!this.props.books.some((book)=>(book.name===val)))\n\n    if (this.props.booksLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.booksErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.booksErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n return (\n    <div className=\"container\">\n    <div className=\"row justify-content-center heading\">\n    <div className=\"col-12\">\n  <h3 align=\"center\">  Add a book</h3>\n  </div>\n    </div>\n    <div className=\"row row-content justify-content-center\">\n    <LocalForm onSubmit={(values) => {\n        this.props.postBook(values.name, values.author, values.description, values.isbn, values.cat, values.floor, values.shelf, 1);\n    }}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\n                                <Col md={4}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name of book\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3),uniqueName\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: ' Must be greater than 2 characters',\n                                            uniqueName: ' There exists a book with this name already'\n                                        }}\n                                     />\n                                </Col>\n                                 <Label htmlFor=\"author\" md={2}>Authors </Label>\n                                <Col md={4}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Name of authors\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: ' Must be greater than 2 characters'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"isbn\" md={2}>ISBN No.</Label>\n                                <Col md={4}>\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\n                                        placeholder=\"ISBN no. of book\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\n                                            uniqueIsbn\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".isbn\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: ' Must be greater than 9 numbers',\n                                            maxLength: ' Must be 13 numbers or less',\n                                            isNumber: ' Must be a number',\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\n                                        }}\n                                     />\n                                </Col>\n                                <Label htmlFor=\"copies\" md={3}> Copies Available</Label>\n                                <Col md={3}>\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\n                                        placeholder=\"Number of copies available\"\n                                        className=\"form-control\"\n            \n                                        value=\"1\"\n                                        disabled\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".copies\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: 'Required',\n                                            minVal: ' Must be greater than 0',\n                                            maxVal: ' Must be 1000 or less',\n                                            isNumber: ' Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n\n      \n                        <Row className=\"form-group\">\n                            <Col>\n                            <Label htmlFor=\"cat\">Category</Label>\n                            <Control.select defaultValue=\"Romance\" model=\".cat\" id=\"cat\" className=\"form-control\">\n                              <option>Romance</option> <option>Technology</option>\n                              <option>Computer Science</option> <option>Management</option>\n                              <option>Electronics</option> <option>Physics</option>\n                              <option>Chemistry</option> <option>Mathematics</option>\n                              <option>Fiction</option> <option>Philosophy</option>\n                              <option>Language</option> <option>Arts</option>\n                              <option>Other</option> \n\n                            </Control.select>\n                            </Col>\n                            <Col>\n                            <Label htmlFor=\"floor\">Floor </Label>\n                            <Control.select defaultValue={0} model=\".floor\" id=\"floor\" \n                            className=\"form-control\" >\n                              <option>0</option> <option>1</option>\n                              <option>2</option> <option>3</option>\n                              <option>4</option> <option>5</option>\n                              <option>6</option> <option>7</option>\n                              <option>8</option> \n                            </Control.select>\n                            </Col>\n                        </Row>\n                        \n                        <Row className=\"form-group text-center justify-content-center\">\n                                <Label htmlFor=\"shelf\" md={3}> Shelf</Label>\n                                <Col md={6}>\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\n                                        placeholder=\"Shelf no. for locating book\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".shelf\"\n                                        show=\"touched\"\n                                        messages={{\n                                            requiredNum: 'Required',\n                                            minVal: ' Must be greater than 0',\n                                            maxVal: ' Must be 100 or less',\n                                            isNumber: ' Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n\n                     \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                        rows=\"12\"\n                                        placeholder=\"Some description of the book\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                          <Row className=\"align-self-center\">\n                          <Col className=\"text-center\">\n                        <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n                        </Button>\n                        </Col>\n                        </Row>\n                    </LocalForm>\n                    </div>\n                <br/>\n    </div>\n );\n\n}\n\n}\n\nexport default AddBook;","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nconst fineRate=1;\nlet totalFine=0;\nconst allowedDays=30;\nfunction RenderIssue ({issue,i}) {\n    const dates=[];\n    const today= new Date();\n    dates.push(today);\n    const issueDate=new Date(Date.parse(issue.createdAt));\n    const deadline = new Date( Date.parse(issue.createdAt));\n    deadline.setDate(deadline.getDate()+30);\n    dates.push(deadline);\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\n    let fine=0;\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\n      {\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\n      }\n   totalFine+=fine;\n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n            <Link to={`/books/${issue.book._id}`}>\n            {issue.book.name}\n            </Link>\n            </td>\n            <td>\n            {issue.book.isbn}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\n            </td>\n            <td>\n                {\n        issue.returned?('Returned on '+(new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(returnDate)))))                    \n               :('Not returned yet')\n                }\n            </td>\n            <td>\n                {\n                    fine\n                }\n            </td>\n            </React.Fragment>\n       );\n}\n\nclass History extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n\n    if (this.props.issues.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.issues.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if(this.props.issues.issues.length===0){\n        return (\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12 text-center\">\n                        <br/><br/><br/><br/>\n                        <h4>{'You have not issued any books.'}</h4> \n                        <h4>{'Request admin to issue a book'}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const list = this.props.issues.issues.map((issue) => {\n            return (\n                    <tr key={issue._id}>\n                        <RenderIssue issue={issue} \n                                     i={this.i++}\n                        />\n                    </tr>\n            );\n        });\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 heading\">\n                <h3>Issue History</h3>\n                <Table striped bordered hover responsive>\n        <thead>\n           <tr>\n            <th>S.No.</th>\n            <th>Name of Book</th>\n            <th>ISBN number</th>\n            <th>Issue Date</th>\n            <th>Return Deadline</th>\n            <th>Return status</th> \n            <th>Fine (in Rs.)</th> \n           </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            <br/>\n            <h6> Total Fine due (if all pending books are returned today) : Rs. {totalFine} </h6>\n            <br/>\n            </div>\n            </div>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default History;","import React,{Component} from 'react';\nimport { Button, Form, FormGroup, Label, Input, Col,Row } from 'reactstrap';\nimport Loading from './LoadingComponent';\n\n\nclass Issue extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        isbn: props.book.isbn,\n        roll: ''\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    console.log(this.props.book)\n    if (this.props.booksLoading||this.props.usersLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.booksErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.booksErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.usersErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.usersErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n   {\n    const bookoptions= this.props.books.map((book,index)=>(<option \n    key={book.isbn}>{book.isbn}</option>));\n    const defaultBook=this.props.book;\n    // To just get list of the students (not the admins)\n    let useroptions=this.props.users.filter((user)=>(!user.admin));\n    const defaultUser=useroptions[0];\n    useroptions= useroptions.map((user,index)=>(<option \n    key={user.roll}>{user.roll}</option>))\n    if(this.state.isbn==='') {\n        this.setState({isbn: defaultBook.isbn,roll: defaultUser.roll  });\n    }\n    return (\n    <div className=\"container full\">\n    <div className=\"row justify-content-center heading\">\n    <div className=\"col-12\">\n  <h3 align=\"center\">  Issue book</h3>\n  </div>\n    </div>\n    <div className=\"row row-content justify-content-center\">\n    <Form onSubmit={(e) => {\n        let bookid=this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0]._id\n        let studentid=this.props.users.filter((user)=>(user.roll===this.state.roll))[0]._id;\n        this.props.postIssue(bookid,studentid);\n        e.preventDefault();\n    }}>\n\n        <FormGroup row>\n          <Label htmlFor=\"isbn\"> ISBN No. of book</Label>\n            <Input type=\"select\" defaultValue={defaultBook.isbn} name=\"isbn\" id=\"isbn\" className=\"form-control\" onInput={(e)=>{this.setState({isbn: e.target.value})}} disabled>\n                  {bookoptions}\n            </Input>\n        </FormGroup>\n        <FormGroup row>\n          <Label htmlFor=\"roll\"> Roll No. of student </Label>\n            <Input type=\"select\" id=\"roll\" \n                   className=\"form-control\" onInput={(e)=>{this.setState({roll: e.target.value})}}>\n                   {useroptions}\n            </Input>\n        </FormGroup>\n        <FormGroup row>\n          <Label htmlFor=\"name\"> Name of book </Label>\n             <Input type=\"text\" id=\"name\" name=\"name\"\n                    placeholder=\"Name of Book\" defaultValue={defaultBook.name}\n                    value={!this.state.isbn?''\n                    :this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0].name}\n                    className=\"form-control\" disabled/>\n        </FormGroup>\n        <FormGroup row>\n          <Label htmlFor=\"author\"> Authors </Label>\n            <Input type=\"text\" id=\"author\" name=\"author\"\n                   placeholder=\"Name of authors\" \n                   defaultValue={defaultBook.author}\n                   value={!this.state.isbn?''\n                   :this.props.books.filter((book)=>(book.isbn===this.state.isbn))[0].author}\n                    className=\"form-control\" disabled/>\n         </FormGroup>\n         <FormGroup row>\n          <Label htmlFor=\"name_student\"> Name of student </Label>\n            <Input type=\"text\" id=\"name_student\" name=\"name_student\"\n                   placeholder=\"Name of student\" \n                   defaultValue={defaultUser.firstname+' '+defaultUser.lastname}\n                   value={!this.state.roll?''\n                   :this.props.users.filter((user)=>(user.roll===this.state.roll))[0].firstname+' '+\n                   this.props.users.filter((user)=>(user.roll===this.state.roll))[0].lastname}\n                    className=\"form-control\" disabled/>\n         </FormGroup>\n         <FormGroup row>\n          <Label htmlFor=\"username\"> Username of student </Label>\n            <Input type=\"text\" id=\"username\" name=\"username\"\n                   placeholder=\"Username of student\" \n                   defaultValue={defaultUser.username}\n                   value={!this.state.roll?''\n                   :this.props.users.filter((user)=>(user.roll===this.state.roll))[0].username}\n                    className=\"form-control\" disabled/>\n         </FormGroup>\n         <Row className=\"align-self-center\">\n            <Col className=\"text-center\">\n              <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n               </Button>\n            </Col>\n        </Row>\n      </Form>\n     </div>\n     <br/>\n    </div>\n );\n\n}\n}\n}\n\nexport default Issue;","import React,{Component} from 'react';\nimport { Table,Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nconst fineRate=1;\nlet totalFine=0;\nconst allowedDays=30;\nfunction RenderIssue ({issue,i,returnBook}) {\n    const dates=[];\n    const today= new Date();\n    dates.push(today);\n    const issueDate=new Date(Date.parse(issue.createdAt));\n    const deadline = new Date( Date.parse(issue.createdAt));\n    deadline.setDate(deadline.getDate()+30);\n    dates.push(deadline);\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\n    let fine=0;\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\n      {\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\n      }\n   totalFine+=fine;\n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n        <Link to={`/users/${issue.student._id}`}>\n        {issue.student.firstname+' '+issue.student.lastname}\n            </Link>\n            </td>\n            <td>\n            {issue.student.roll}\n            </td>\n            <td>\n                {issue.book==null ? \"N/A\":<Link to={`/books/${issue.book._id}`}>\n            {issue.book.name}\n            </Link>}\n            </td>\n            <td>\n            {issue.book==null ? \"N/A\":issue.book.isbn}     \n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\n            </td>\n            <td>\n                {\n                    fine\n                }\n            </td>\n            <td>\n            <Button color=\"info\" onClick={()=>{\n               returnBook(issue._id); \n            }}>Return</Button>\n            </td>         \n            </React.Fragment>\n       );\n}\n\nclass Return extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    console.log(this.props.issues);\n    if (this.props.issues.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.issues.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if(this.props.issues.issues.length===0){\n        return (\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12 text-center\">\n                        <br/><br/><br/><br/>\n                        <h4>{'All books have been returned.'}</h4> \n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const dueIssues = this.props.issues.issues.filter((issue)=>(!issue.returned));\n        const list = dueIssues.map((issue) => {\n            return (\n                    <tr key={issue._id}>\n                        <RenderIssue issue={issue} \n                                     i={this.i++}\n                                     returnBook={this.props.returnIssue}\n                        />\n                    </tr>\n            );\n        });\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 heading\">\n                <h3>List of books not returned</h3>\n                <Table striped bordered hover responsive>\n        <thead>\n           <tr>\n            <th>S.No.</th>\n            <th>Name of Student</th>\n            <th>Roll No.</th>\n            <th>Name of Book</th>\n            <th>ISBN number</th>\n            <th>Issue Date</th>\n            <th>Return Deadline</th>\n            <th>Fine (in Rs.)</th>\n            <th>Return book</th> \n           </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            <br/>\n            <h6> Total Fine due (if all pending books are returned today) : Rs. {totalFine} </h6>\n            <br/>\n            </div>\n            </div>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default Return;","import React,{Component} from 'react';\nimport {Card,CardBody,CardHeader,CardText} from 'reactstrap';\nimport Loading from './LoadingComponent';\n\nclass UserDetail extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n        }\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\n\nrender(){\n    if (this.props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else    \n    return(\n\n        <div className=\"container mt-6 home text-center align-self-center\">\n            <div className=\"row text-center justify-content-center\">\n            \n            <Card className=\"heading\">\n                \n        <CardHeader><h3>User Details</h3></CardHeader>\n        <CardBody>\n          <CardText>\n          <h5> First Name : {'          '+this.props.user.firstname}</h5>\n          <h5> Last Name : {'          '+this.props.user.lastname}</h5>\n          <h5> {(this.props.user.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.user.roll}</h5>\n          <h5> Email : {'          '+this.props.user.email}</h5>\n          <h5> Username : {'          '+this.props.user.username}</h5>\n          </CardText>\n        </CardBody>\n          </Card>\n            </div>\n            </div>\n        );\n}\n\n}\n\nexport default UserDetail;","import React,{Component} from 'react';\nimport { Card, CardText, CardBody, CardLink,\n    CardTitle, Button } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nclass Stats extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n    if (this.props.issues.isLoading||this.props.booksLoading||this.props.usersLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.issues.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.issues.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.usersErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.usersErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.booksErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.booksErrMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center heading\">\n            <div className=\"col-12\">\n                <h3>Stats</h3>\n            </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\n            <Card>\n                <CardBody>\n                    <CardTitle>\n                        <h1>{this.props.books.length}</h1>\n                    </CardTitle>\n                    <CardText>Different books available</CardText>\n                        <CardLink tag={Link} to=\"/books\">\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View\n                            </Button>           \n                        </CardLink>\n                </CardBody>\n            </Card>\n            </div>\n\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\n            <Card>\n                <CardBody>\n                    <CardTitle>\n                        <h1>{this.props.issues.issues.length}</h1>\n                    </CardTitle>\n                    <CardText>Books Issued</CardText>\n                        <CardLink tag={Link} to=\"/logs\">\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View\n                            </Button>           \n                        </CardLink>\n                </CardBody>\n            </Card>\n            </div>\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\n            <Card>\n                <CardBody>\n                    <CardTitle>\n                    <h1>\n                    {this.props.issues.issues.filter((issue)=>(!issue.returned)).length}\n                    </h1>\n                    </CardTitle>\n                    <CardText>Books not yet returned</CardText>\n                        <CardLink>\n                            <Button tag={Link} to=\"/return\" color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View\n                            </Button>           \n                        </CardLink>\n                </CardBody>\n            </Card>\n            </div>\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\n            <Card>\n                <CardBody>\n                    <CardTitle>\n                        <h1>{this.props.users.filter((user)=>(!user.admin)).length}</h1>\n                    </CardTitle>\n                    <CardText>Students registered</CardText>\n                        <CardLink tag={Link} to=\"/list_students\">\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View\n                            </Button>           \n                        </CardLink>\n                </CardBody>\n            </Card>\n            </div>\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\n            <Card>\n                <CardBody>\n                    <CardTitle>\n                        <h1>{this.props.users.filter((user)=>(user.admin)).length}</h1>\n                    </CardTitle>\n                    <CardText>Administrators in-charge</CardText>\n                        <CardLink tag={Link} to=\"/list_admins\">\n                            <Button color=\"info\"><i className=\"fa fa-eye fa-lg\"/>\n                             {' '}&nbsp;View\n                            </Button>           \n                        </CardLink>\n                </CardBody>\n            </Card>\n            </div>\n            </div>\n            \n            <br/>\n            </div>\n          );\n        }\n    }\n\n}\n\nexport default Stats;","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nconst fineRate=1;\n\nconst allowedDays=30;\nfunction RenderIssue ({issue,i}) {\n    const dates=[];\n    const today= new Date();\n    dates.push(today);\n    const issueDate=new Date(Date.parse(issue.createdAt));\n    const deadline = new Date( Date.parse(issue.createdAt));\n    deadline.setDate(deadline.getDate()+30);\n    dates.push(deadline);\n    const returnDate=issue.returned?new Date(Date.parse((issue.updatedAt))):(new Date(Math.min.apply(null,dates)));\n    let fine=0;\n      if(((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))>allowedDays)\n      {\n        fine=Math.floor((returnDate.getTime()-issueDate.getTime())/(1000 * 60 * 60 * 24))*fineRate;\n      }\n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n            <Link to={`/users/${issue.student._id}`}>\n            {issue.student.firstname+' '+issue.student.lastname}\n            </Link>\n            </td>\n            <td>\n            {issue.student.roll}\n            </td>\n            <td>\n            {issue.book==null ? \"N/A\":<Link to={`/books/${issue.book._id}`}>\n            {issue.book.name}\n            </Link>}\n            </td>\n            <td>\n            {issue.book==null ? \"N/A\":issue.book.isbn}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(issue.createdAt)))}\n            </td>\n            <td>\n                {new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(deadline)}\n            </td>\n            <td>\n                {\n        issue.returned?('Returned on '+(new Intl.DateTimeFormat('en-US',{year: 'numeric', month: 'short', day: '2-digit'}).format(new Date( Date.parse(returnDate)))))                    \n               :('Not returned yet')\n                }\n            </td>\n            <td>\n                {\n                    fine\n                }\n            </td>\n            </React.Fragment>\n       );\n}\n\nclass Log extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n\n    if (this.props.issues.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.issues.errMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if(this.props.issues.issues.length===0){\n        return (\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12 text-center\">\n                        <br/><br/><br/><br/>\n                        <h4>{'You have not issued any books.'}</h4> \n                        <h4>{'Request admin to issue a book'}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const list = this.props.issues.issues.map((issue) => {\n            return (\n                    <tr key={issue._id}>\n                        <RenderIssue issue={issue} \n                                     i={this.i++}\n                        />\n                    </tr>\n            );\n        });\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 heading\">\n                <h3>Issue Log</h3>\n                <Table striped bordered hover responsive>\n        <thead>\n           <tr>\n            <th>S.No.</th>\n            <th>Name of Student</th>\n            <th>Roll No.</th>\n            <th>Name of Book</th>\n            <th>ISBN number</th>\n            <th>Issue Date</th>\n            <th>Return Deadline</th>\n            <th>Return status</th> \n            <th>Fine (in Rs.)</th> \n           </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            <br/>\n           \n            <br/>\n            </div>\n            </div>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default Log;","import React,{Component} from 'react';\nimport { Table } from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport Loading from './LoadingComponent.js';\n\nfunction RenderUser ({user,i}) {\n    return (\n            <React.Fragment>\n            <td>\n            {i}\n            </td>\n            <td>\n            <Link to={`/users/${user._id}`}>\n            {user.firstname+' '+ user.lastname}\n            </Link>\n            </td>\n            <td>\n            {user.roll}\n            </td>\n            <td>\n            {user.username}\n            </td>\n            <td>\n            {user.email}\n            </td>\n            </React.Fragment>\n       );\n}\n\nclass UserList extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n         }\n        this.i=1; \n    }\n    componentDidMount() {\n        window.scrollTo(0, 0)\n      }\n\nrender(){\n\n    if (this.props.usersLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (this.props.usersErrMess) {\n        return(\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12\">\n                        <br/><br/><br/><br/>\n                        <h3>{this.props.errMess}</h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if(this.props.users.length===0){\n        return (\n            <div className=\"container loading\">\n                <div className=\"row heading\"> \n                    <div className=\"col-12 text-center\">\n                        <br/><br/><br/><br/>\n                        <h4>{'No users found'}</h4> \n                           </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const list = this.props.users.map((user) => {\n            return (\n                    <tr key={user._id}>\n                        <RenderUser user={user} \n                                     i={this.i++}\n                        />\n                    </tr>\n            );\n        });\n    \n        return(\n\n        <div className=\"container mt-6 text-center align-self-center full\">\n            <div className=\"row text-center justify-content-center\">\n            <div className=\"col-12 heading\">\n                <h3>List of {this.props.users[0].admin?' admins in-charge': ' students registered'}</h3>\n                <Table striped bordered hover responsive>\n        <thead>\n           <tr>\n            <th>S.No.</th>\n            <th>Name of {this.props.users[0].admin?' admin': ' student'}</th>\n            <th>{this.props.users[0].admin?' Admin Id': ' Roll No.'}</th>\n            <th>Username</th>\n            <th>Email</th>\n            </tr>\n        </thead>\n        <tbody>\n            {list}\n        </tbody>\n        </Table>\n            <br/>\n            <br/>\n            </div>\n            </div>\n            </div>\n        );\n        }\n    }\n\n}\n\nexport default UserList;","export const BOOKS_LOADING = 'BOOKS_LOADING';\nexport const BOOKS_FAILED = 'BOOKS_FAILED';\nexport const ADD_BOOKS = 'ADD_BOOKS';\nexport const ADD_BOOK = 'ADD_BOOK';\nexport const EDIT_BOOK = 'EDIT_BOOK';\nexport const DELETE_BOOK = 'DELETE_BOOK';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const EDIT_USER = 'EDIT_USER';\nexport const EDIT_PASSWORD = 'EDIT_PASSWORD';\nexport const ISSUES_LOADING = 'ISSUES_LOADING';\nexport const ISSUES_FAILED = 'ISSUES_FAILED';\nexport const ADD_ISSUES = 'ADD_ISSUES';\nexport const ADD_ISSUE = 'ADD_ISSUE';\nexport const RETURN_ISSUE = 'RETURN_ISSUE';\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const USERS_FAILED = 'USERS_FAILED';\nexport const ADD_USERS = 'ADD_USERS';","export const baseUrl=\"https://lib-management.onrender.com/api/\";\n// export const baseUrl=\"http://localhost:5000/api/\";","import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../baseUrl'\n\nexport const addBook = (book) => ({\n  type: ActionTypes.ADD_BOOK,\n  payload: book\n});\n\nexport const postBook = (name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\n    const newBook = {\n      name: name, author: author,\n       description: description, isbn: isbn,\n        cat: cat, floor: floor, \n        shelf: shelf, copies: copies\n    };\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'books', {\n        method: \"POST\",\n        body: JSON.stringify(newBook),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': bearer\n        }\n     //   ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Book added successfully');\n      return  dispatch(addBook(response));})\n    .catch(error =>  { alert('Your book could not be added\\nError: '+error.message); });\n};\n\nexport const editBook = (_id, name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\n\n  const newBook = {\n    name: name, author: author,\n     description: description, isbn: isbn,\n      cat: cat, floor: floor, \n      shelf: shelf, copies: copies\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'books/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newBook),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => (dispatch(editBookdispatch(response))))\n  .catch(error =>  {  \n  alert('Your book could not be edited\\nError: '+error.message); });\n};\n\nexport const editPassword = (_id,username,password) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/password/' + _id, {\n    method: \"PUT\"\n  //  ,     credentials: 'same-origin'\n    ,      body: JSON.stringify({password: password}),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    } })\n.then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText+'\\n ');\n      error.response = response;\n      throw error;\n    }\n  },\n  error => {\n        throw error;\n  })\n.then(response => response.json())\n.then(response => { \n  let newCreds={username: username, password: password};\n  localStorage.removeItem('creds');\n  localStorage.setItem('creds', JSON.stringify(newCreds));\n  alert('Password changed successfully');\n  return dispatch(editPasswordDispatch(newCreds));})\n.catch(error =>  {  \nalert('Your password could not be changed\\nError: '+error.message); });\n}\n\nexport const editUser = (_id, firstname, lastname, roll, email) => (dispatch) => {\n\n  const newUser = {\nfirstname: firstname,\nlastname: lastname,\nroll: roll,\nemail: email  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/' + _id, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n      ,      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    localStorage.removeItem('userinfo');\n    localStorage.setItem('userinfo', JSON.stringify(response));\n    return dispatch(editUserdispatch(response));})\n  .catch(error =>  {  \n  alert('Your profile could not be edited\\nError: '+error.message+'\\n May be someone has already registered with that Roll No. or Email'); });\n};\n\nexport const deleteBook = (_id) => (dispatch) => {\n  \n  const bearer = 'Bearer ' + localStorage.getItem('token');    \n  return fetch(baseUrl + 'books/' + _id, {\n      method: \"DELETE\"\n    //  ,       credentials: \"same-origin\"\n      ,       headers: {\n        'Authorization': bearer\n      }\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(deleteBookdispatch(response)))\n  .catch(error =>  {alert('Your book could not be deleted\\nError: '+error.message); });\n};\n\nexport const fetchBooks = () => (dispatch) => {\n    dispatch(booksLoading(true));\n    return fetch(baseUrl+'books')\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(books => dispatch(addBooks(books)))\n    .catch(error => dispatch(booksFailed(error.message)));\n}\n\n\nexport const fetchUsers = () => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  dispatch(usersLoading(true));\n  return fetch(baseUrl+'users',{\n    headers: {\n      'Authorization': bearer\n    }\n  })\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(users => dispatch(addUsers(users)))\n  .catch(error => dispatch(usersFailed(error.message)));\n}\n\n\nexport const booksLoading = () => ({\n    type: ActionTypes.BOOKS_LOADING\n});\n\nexport const booksFailed = (errmess) => ({\n    type: ActionTypes.BOOKS_FAILED,\n    payload: errmess\n});\n\nexport const addBooks = (books) => ({\n    type: ActionTypes.ADD_BOOKS,\n    payload: books\n});\n\nexport const addUsers = (users) => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\n\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\n\nexport const editBookdispatch = (books) => ({\n  type: ActionTypes.EDIT_BOOK,\n  payload: books\n});\n\nexport const returnBookdispatch = (issue) => ({\n  type: ActionTypes.RETURN_ISSUE,\n  payload: issue\n});\n\nexport const editUserdispatch = (USER) => ({\n  type: ActionTypes.EDIT_USER,\n  payload: USER\n});\n\nexport const editPasswordDispatch = (CREDS) => ({\n  type: ActionTypes.EDIT_PASSWORD,\n  payload: CREDS\n})\n\nexport const deleteBookdispatch = (resp) => ({\n  type: ActionTypes.DELETE_BOOK,\n  payload: resp\n});\n\nexport const requestLogin = (creds) => {\n  return {\n      type: ActionTypes.LOGIN_REQUEST,\n      creds\n  }\n}\n\nexport const receiveLogin = (response) => {\n  return {\n      type: ActionTypes.LOGIN_SUCCESS,\n      token: response.token,\n      userinfo: response.userinfo\n  }\n}\n\nexport const loginError = (message) => {\n  return {\n      type: ActionTypes.LOGIN_FAILURE,\n      message\n  }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n\n  dispatch(requestLogin(creds));\n  return fetch(baseUrl + 'users/login', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n          // If login was successful, set the token in local storage\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('creds', JSON.stringify(creds));\n          localStorage.setItem('userinfo', JSON.stringify(response.userinfo));    \n          dispatch(fetchIssues(!response.userinfo.admin));      \n          if(response.userinfo.admin) {\n            dispatch(fetchUsers())\n          }\n          setTimeout(()=>{\n            logoutUser();\n            alert('Your JWT token has expired. \\nPlease log in again to continue.');\n           },3600*1000);\n          // Dispatch the success action\n          dispatch(receiveLogin(response));\n      \n      }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => {\n    alert(error.message+'\\n'+\"Username and password didn't match\");\n     return dispatch(loginError(error.message));})\n};\n\nexport const registerUser = (creds) => (dispatch) => {\n\n\n  return fetch(baseUrl + 'users/register', {\n      method: 'POST',\n      headers: { \n          'Content-Type':'application/json' \n      },\n      body: JSON.stringify(creds)\n  })\n  .then(response => {\n      if (response.ok) {\n          return response;\n      } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n      },\n      error => {\n          throw error;\n      })\n  .then(response => response.json())\n  .then(response => {\n      if (response.success) {\n          // If Registration was successful, alert the user\n          alert('Registration Successful');\n        }\n      else {\n          var error = new Error('Error ' + response.status);\n          error.response = response;\n          throw error;\n      }\n  })\n  .catch(error => alert(error.message+'\\n'+\n      'May be someone has already registered with that username, email or Roll No.\\nTry Entering a new username,email or Roll No. '))\n};\n\nexport const addIssue = (issue) => ({\n  type: ActionTypes.ADD_ISSUE,\n  payload: issue\n});\n\nexport const postIssue = (bookId,studentId) => (dispatch) => {\n    const newIssue = {\n    book: bookId,\n    student: studentId \n    };\n    const bearer = 'Bearer ' + localStorage.getItem('token');\n    return fetch(baseUrl + 'issues', {\n        method: \"POST\",\n        body: JSON.stringify(newIssue),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': bearer\n        }\n     //   ,        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => { alert('Book issued successfully');\n      return  dispatch(addIssue(response));})\n    .catch(error =>  {\n      alert('Book could not be issued\\nError: '+error.message+'\\n'+\n      'May be the student has already been issued a book and not returned. Please return them first. \\n'+\n      'or the book may not available. You can wait for some days, until the book is returned to library.'); });\n};\n\nexport const returnIssue = (issueId) => (dispatch) => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'issues/' + issueId, {\n      method: \"PUT\"\n    //  ,     credentials: 'same-origin'\n    , headers: {\n        \"Content-Type\": \"application/json\",\n        'Authorization': bearer\n      } })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => { \n    alert('Book returned successfully');\n    return dispatch(returnBookdispatch(response));})\n  .catch(error =>  {  \n  alert('The book could not be returned\\nError: '+error.message); });\n};\n\nexport const fetchIssues = (student) => (dispatch) => {\n  let issueUrl;\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  if(student) {\n    issueUrl='issues/student';\n  }\n  else {\n    issueUrl='issues';\n  }\n  dispatch(issuesLoading(true));\n  return fetch(baseUrl+issueUrl,{\n     headers: {\n        'Authorization': bearer\n       }\n  })\n      .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n  .then(response => response.json())\n  .then(issues => dispatch(addIssues(issues)))\n  .catch(error => dispatch(issuesFailed(error.message)));\n}\n\n\n\nexport const issuesLoading = () => ({\n  type: ActionTypes.ISSUES_LOADING\n});\n\nexport const issuesFailed = (errmess) => ({\n  type: ActionTypes.ISSUES_FAILED,\n  payload: errmess\n});\n\nexport const addIssues = (issues) => ({\n  type: ActionTypes.ADD_ISSUES,\n  payload: issues\n});\n\nexport const usersFailed = (errmess) => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\n\n\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  }\n}\n\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  }\n}\n\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(requestLogout())\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');  \n  localStorage.removeItem('userinfo');  \n  dispatch(receiveLogout())\n}\n","import React, {Component} from 'react';\nimport Header from './HeaderComponent.js';\nimport Footer from './FooterComponent.js';\nimport Home from './HomeComponent.js';\nimport Booklist from './BooksComponent.js';\nimport Search from './SearchComponent.js';\nimport BookDetail from './BookDetailComponent.js';\nimport Profile from './ProfileComponent.js';\nimport AddBook from './AddBookComponent.js';\nimport History from './HistoryComponent.js';\nimport Issue from './IssueComponent.js';\nimport Return from './ReturnComponent.js';\nimport UserDetail from './UserDetailComponent.js';\nimport Stats from './StatsComponent.js';\nimport Log from './LogComponent.js';\nimport UserList from './UserListComponent.js';\n\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\nimport { postBook, fetchBooks, editBook, deleteBook,loginUser, logoutUser, \n  registerUser, editUser, editPassword, postIssue, returnIssue, fetchIssues, fetchUsers} from '../redux/ActionCreators';\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst requiredNum = (val) => !!(val);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxVal = (len) => (val) => !(val) || (val<= len);\nconst minVal = (len) => (val) => (val) && (val>= len);\nconst isNumber = (val) => !isNaN(Number(val));\n\nconst mapStateToProps= (state)=>{\n  return{\n    books: state.books,\n    auth: state.auth,\n    issues: state.issues,\n    users: state.users\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchBooks: () => { dispatch(fetchBooks())},\n  fetchIssues: (student) =>{ dispatch(fetchIssues(student))},\n  fetchUsers: () => { dispatch(fetchUsers())},\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\n  deleteBook: (_id) =>  dispatch(deleteBook(_id)),\n  loginUser: (creds) => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  registerUser: (creds) => dispatch(registerUser(creds)),\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\n  postIssue: (bookId,studentId) => (dispatch(postIssue(bookId,studentId))),\n  returnIssue: (issueId) => (dispatch(returnIssue(issueId)))\n});\n\nclass Main extends Component {\n  \n  componentDidMount() {\n    this.props.fetchBooks();\n    if(this.props.auth.isAuthenticated){\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\n    }\n    if(this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin){\n      this.props.fetchUsers();\n    }\n  }\n    constructor(props){\n        super(props);\n        this.state={\n          isDeleteModalOpen: false,\n          isEditModalOpen: false,\n          selectedBook: null\n        };\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\n        this.toggleEditModal=this.toggleEditModal.bind(this);\n        this.changeSelected=this.changeSelected.bind(this);\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\n      }\n    \n      handleSubmitEdit(values) {\n        this.toggleEditModal();\n        this.props.editBook(this.state.selectedBook._id, values.name, values.author,\n          values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);     \n        }\n    \n    changeSelected(_id){\n      this.setState({selectedBook:this.props.books.books.filter((book)=>(book._id===_id))[0]});\n    }\n\n    toggleDeleteModal(){\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\n    }\n    \n    toggleEditModal(){\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\n    }\n\n    render(){\n      const BookWithId = ({match}) => {\n      let selectedBook=this.props.books.books.filter((book) => (book._id)===(match.params.bookId))[0]\n      let notFoundErr=null;\n      if(selectedBook===undefined){\n      notFoundErr=(\"\\n\\n Error 404 :  Book not found\");\n      }  \n      return(\n          <BookDetail book={selectedBook}\n          isLoading={this.props.books.isLoading}\n          errMess={this.props.books.errMess||notFoundErr}\n          toggleEditModal={this.toggleEditModal}\n          changeSelected={this.changeSelected}\n          isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n          />\n          );\n      };\n    \n      const UserWithId = ({match}) => {\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\n        let notFoundErr=null;\n        if(selectedUser===undefined){\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\n        }  \n        return(\n            <UserDetail user={selectedUser}\n            isLoading={this.props.users.isLoading}\n            errMess={this.props.users.errMess||notFoundErr}\n            />\n            );\n        };\n   \n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      const PrivateRoute = ({ component: Component, ...rest }) => (\n        <Route {...rest} render={(props) => (\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/home',\n                state: { from: props.location }\n              }} />\n        )} />\n      );\n\n      let uniqueIsbn= (defaultIsbn)=> (val) =>(!this.props.books.books.some((book)=>(book.isbn===val))||(val===defaultIsbn))\n      let uniqueName= (defaultName)=>(val) =>(!this.props.books.books.some((book)=>(book.name===val))||(val===defaultName))\n\n    return ( \n          <div className=\"App\">\n          <Header auth={this.props.auth} \n          loginUser={this.props.loginUser} \n          logoutUser={this.props.logoutUser}\n          registerUser={this.props.registerUser}\n          />\n          <Switch location={this.props.location}>\n                      <Route exact path='/home' component={() => <Home />} />\n                      <Route exact path='/search' component={() => <Search \n                      books={this.props.books.books}\n                      booksLoading={this.props.books.isLoading}\n                      booksErrMess={this.props.books.errMess}\n                      isSignedIn={this.props.auth.isAuthenticated}\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}\n                />}\n                />\n\n                      <Route exact path='/books' component={() => <Booklist\n                      books={this.props.books.books}\n                      booksLoading={this.props.books.isLoading}\n                      booksErrMess={this.props.books.errMess}\n                      isSignedIn={this.props.auth.isAuthenticated}\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n                      auth={this.props.auth}\n                      toggleEditModal={this.toggleEditModal}\n                      toggleDeleteModal={this.toggleDeleteModal}\n                      changeSelected={this.changeSelected}/>}/>\n                      <Route path='/books/:bookId' component={BookWithId} />\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\n                      auth={this.props.auth}\n                      editUser={this.props.editUser} \n                      editPassword={this.props.editPassword}/>\n                      }\n                      />\n                       <PrivateRouteAdmin exact path='/add_book' component={() => <AddBook\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\n                      postBook={this.props.postBook}\n                      books={this.props.books.books}\n                      booksLoading={this.props.books.isLoading}\n                      booksErrMess={this.props.books.errMess}\n                      />\n                      }/>\n                      <PrivateRoute exact path='/profile' component={() => <Profile\n                      auth={this.props.auth}\n                      editUser={this.props.editUser} />}\n                      />\n                       <PrivateRoute exact path='/history' component={() => <History\n                      issues={this.props.issues}\n                      auth={this.props.auth}\n                     />}\n                      />\n                       <PrivateRouteAdmin exact path='/logs' component={() => <Log\n                      issues={this.props.issues}\n                     />}\n                      />\n                         <PrivateRouteAdmin exact path='/list_students' component={() => <UserList\n                      users={this.props.users.users.filter((user)=>(!user.admin))}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                     />}\n                      />\n                         <PrivateRouteAdmin exact path='/list_admins' component={() => <UserList\n                      users={this.props.users.users.filter((user)=>(user.admin))}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                     />}\n                      />\n                       <PrivateRouteAdmin exact path='/issue' component={() => <Issue\n                      auth={this.props.auth}\n                      books={this.props.books.books}\n                      booksLoading={this.props.books.isLoading}\n                      booksErrMess={this.props.books.errMess}\n                      users={this.props.users.users}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                      postIssue={this.props.postIssue}\n                      book={this.state.selectedBook}\n                       />} />\n                      <PrivateRouteAdmin exact path='/return' component={() => <Return\n                      issues={this.props.issues}\n                      auth={this.props.auth}\n                      returnIssue={this.props.returnIssue}\n                     />} />\n                      <PrivateRouteAdmin path='/users/:userId' component={UserWithId}/>\n                      <PrivateRouteAdmin path='/stats' component={() => <Stats\n                      issues={this.props.issues}\n                      books={this.props.books.books}\n                      booksLoading={this.props.books.isLoading}\n                      booksErrMess={this.props.books.errMess}\n                      users={this.props.users.users}\n                      usersLoading={this.props.users.isLoading}\n                      usersErrMess={this.props.users.errMess}\n                     />}/>\n                      <Redirect to=\"/home\"/>\n          </Switch>\n        <Footer/>\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\n                     <ModalHeader toggle={this.toggleDeleteModal}>\n                         Confirm Deletion\n                     </ModalHeader>\n                     <ModalBody>\n                       Book details : <br/><br/>\n                        Name : {this.state.selectedBook?this.state.selectedBook.name:''} <br/>\n                        Authors : {this.state.selectedBook?this.state.selectedBook.author:''} <br/>\n                        ISBN Number : {this.state.selectedBook?this.state.selectedBook.isbn:''} <br/>\n                        Available Copies : {this.state.selectedBook?this.state.selectedBook.copies:''} <br/> <br/>\n                        Are you sure you wish to delete this book ? <br/><br/>\n         <Button color=\"danger\" onClick={()=>{\n           this.props.deleteBook(this.state.selectedBook._id);\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \n         <Button color=\"warning\" onClick={()=>{\n           this.toggleDeleteModal();\n         }}>No</Button>\n                     </ModalBody>\n          </Modal>\n          {this.state.selectedBook?(\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\n                     <ModalHeader toggle={this.toggleEditModal}>\n                         Edit a book\n                     </ModalHeader>\n                     <ModalBody>\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\n                    <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        defaultValue={this.state.selectedBook.name}\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3),\n                                            uniqueName: uniqueName(this.state.selectedBook.name)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            uniqueName: ' There exists a book with this name already'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>                    \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={2}>Authors </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        defaultValue={this.state.selectedBook.author}\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"isbn\" md={4}>ISBN No.</Label>\n                                <Col md={8}>\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\n                                        defaultValue={this.state.selectedBook.isbn}\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\n                                            uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".isbn\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 9 numbers',\n                                            maxLength: 'Must be 13 numbers or less',\n                                            isNumber: 'Must be a number',\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                                        \n                        <Row className=\"form-group\">\n                            <Col>\n                            <Label htmlFor=\"cat\">Category</Label>\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedBook.cat}>\n                              <option>Romance</option> <option>Technology</option>\n                              <option>Computer Science</option> <option>Management</option>\n                              <option>Electronics</option> <option>Physics</option>\n                              <option>Chemistry</option> <option>Mathematics</option>\n                              <option>Fiction</option> <option>Philosophy</option>\n                              <option>Language</option> <option>Arts</option>\n                              <option>Other</option> \n\n                                                          </Control.select>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"copies\" md={6}> Copies Available</Label>\n                                <Col md={6}>\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\n                                        defaultValue={this.state.selectedBook.copies}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(1000), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".copies\"\n                                        messages={{\n                                            requiredNum: 'Required',\n                                            minVal: 'Must be greater than 0',\n                                            maxVal: 'Must be 1000 or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n\n                        <Row className=\"form-group\">\n                            <Col>\n                            <Label htmlFor=\"floor\">Floor </Label>\n                            <Control.select model=\".floor\" id=\"floor\" className=\"form-control\" defaultValue={this.state.selectedBook.floor}>\n                              <option>0</option> <option>1</option>\n                              <option>2</option> <option>3</option>\n                              <option>4</option> <option>5</option>\n                              <option>6</option> <option>7</option>\n                              <option>8</option> \n                            </Control.select>\n                            </Col>\n                        </Row>\n                        \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"shelf\" md={6}> Shelf</Label>\n                                <Col md={6}>\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\n                                        defaultValue={this.state.selectedBook.shelf}\n                                        className=\"form-control\"\n                                        validators={{\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".shelf\"\n                                        messages={{\n                                            requiredNum: 'Required',\n                                            minVal: 'Must be greater than 0',\n                                            maxVal: 'Must be 100 or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n\n                     \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\n                                        rows=\"12\"\n                                        defaultValue={this.state.selectedBook.description}\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                          <Row>\n                          <Col className=\"ml-auto mr-auto\">\n                        <Button type=\"submit\" className=\"bg-primary\">\n                            Submit\n                        </Button>\n                        </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n               \n          </Modal>):(<React.Fragment/>)}\n\n          </div>\n           );     \n    }\n    }\n\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n\n","import * as ActionTypes from './ActionTypes';\n\nconst Books = (state = { isLoading: true,\n    errMess: null,\n    books:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_BOOKS:\n            return {...state, isLoading: false, errMess: null, books: action.payload};\n\n        case ActionTypes.BOOKS_LOADING:\n            return {...state, isLoading: true, errMess: null, books: []}\n\n        case ActionTypes.BOOKS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_BOOK:\n            var book = action.payload;\n            return { ...state, books: state.books.concat(book)};\n\n        case ActionTypes.EDIT_BOOK:\n            var newbook = action.payload;\n            return { ...state, books: state.books.map((book)=>\n                {\n                if(book._id===newbook._id)\n                {\n                    return newbook;\n                }\n            else {\n                    return book;\n            }\n                 })\n                }\n\n        case ActionTypes.DELETE_BOOK:\n        var resp = action.payload;\n        return { ...state, books: state.books.filter((book)=>{\n            return book._id!==resp._id}) }\n\n        default:\n            return state;\n    }\n};\nexport default Books;","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nconst Auth = (state = {\n        isLoading: false,\n        isAuthenticated: localStorage.getItem('token') ? true : false,\n        token: localStorage.getItem('token'),\n        user: localStorage.getItem('creds') ? JSON.parse(localStorage.getItem('creds')) : null,\n        userinfo: localStorage.getItem('userinfo') ? JSON.parse(localStorage.getItem('userinfo')) : null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n                user: action.creds\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                token: action.token,\n                userinfo: action.userinfo\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n            \n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null,\n                userinfo: null\n            };\n\n        case ActionTypes.EDIT_USER:\n            return {...state,\n                userinfo: action.payload};\n\n        case ActionTypes.EDIT_PASSWORD:\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default Auth;","import * as ActionTypes from './ActionTypes';\n\nconst Issues = (state = { isLoading: true,\n    errMess: null,\n    issues:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_ISSUES:\n            return {...state, isLoading: false, errMess: null, issues: action.payload};\n\n        case ActionTypes.ISSUES_LOADING:\n            return {...state, isLoading: true, errMess: null, issues: []}\n\n        case ActionTypes.ISSUES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        case ActionTypes.ADD_ISSUE:\n            var issue = action.payload;\n            return { ...state, issues: state.issues.concat(issue)};\n\n        case ActionTypes.RETURN_ISSUE:\n            var newissue = action.payload;\n            return { ...state, issues: state.issues.map((issue)=>\n                {\n                if(issue._id===newissue._id)\n                {\n                    return newissue;\n                }\n            else {\n                    return issue;\n            }\n                 })\n                }\n\n        default:\n            return state;\n    }\n};\nexport default Issues;","import * as ActionTypes from './ActionTypes';\n\nconst Users = (state = { isLoading: true,\n    errMess: null,\n    users:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_USERS:\n            return {...state, isLoading: false, errMess: null, users: action.payload};\n\n        case ActionTypes.USERS_LOADING:\n            return {...state, isLoading: true, errMess: null, users: []}\n\n        case ActionTypes.USERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\nexport default Users;","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport  Books  from './books.js';\nimport Auth from './auth.js';\nimport Issues from './issues.js';\nimport Users from './users.js'\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const ConfigureStore = ()=>{\n    const store=createStore(\n        combineReducers({\n            books: Books,\n            auth: Auth,\n            issues: Issues,\n            users: Users\n        }),\n        composeEnhancers(applyMiddleware(thunk))\n    );\n    return store;\n}","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/store.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './App.css';\n\nconst store= ConfigureStore();\n\nfunction App() {\n  return ( \n    <Provider store={store}>\n    <BrowserRouter>\n      <div className=\"App\">\n       <Main/>\n      </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}